#! /usr/bin/env ruby

require "clamp"
require "docker"
require "docker_map/image_set"
require "term/ansicolor"

Excon.defaults[:ssl_verify_peer] = false

C = Term::ANSIColor

Clamp do

  def execute
    load_images
    image_set.roots.each do |root|
      display_image(root)
    end
  end

  private

  def image_set
    @image_set ||= DockerMap::ImageSet.new
  end

  def load_images
    Docker::Image.all(:all => true).each do |image|
      info = image_set[image.id]
      parent_id = image.info.fetch('ParentId')
      parent_id = nil if parent_id == ""
      if parent_id
        parent = image_set[parent_id]
        info.parent = parent
        parent.children << info
      end
      info.date = Time.at(image.info["Created"])
      info.size = (image.info["VirtualSize"].to_f / 1024 / 1024).round(1)
      image.info.fetch('RepoTags').each do |tag|
        info.tags << tag unless tag == '<none>:<none>'
      end
    end
  end

  def display_image(image, prefix = "")
    puts "#{prefix}#{image.id[0..11]} #{C.cyan}(#{image.date.strftime("%F")}, #{image.size})#{C.reset}"
    image.tags.to_a.sort.each do |tag|
      puts "#{prefix}  #{C.yellow}- #{tag.inspect}#{C.reset}"
    end
    image.children.each do |child|
      display_image(child, prefix + "  ")
    end
  end

end

